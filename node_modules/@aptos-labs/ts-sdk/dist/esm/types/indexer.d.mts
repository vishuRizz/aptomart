import { GetObjectDataQuery, GetAccountOwnedTokensQuery, GetAccountOwnedTokensFromCollectionQuery, GetAccountCollectionsWithOwnedTokensQuery, GetAccountCoinsDataQuery, GetChainTopUserTransactionsQuery, GetEventsQuery, GetNumberOfDelegatorsQuery, GetDelegatedStakingActivitiesQuery, GetCollectionDataQuery, GetTokenDataQuery, GetProcessorStatusQuery, GetFungibleAssetMetadataQuery, GetFungibleAssetActivitiesQuery, GetCurrentFungibleAssetBalancesQuery, GetTokenActivityQuery, GetCurrentTokenOwnershipQuery, GetTableItemsDataQuery, GetTableItemsMetadataQuery, GetNamesQuery } from './generated/operations.mjs';
import './generated/types.mjs';

/**
 * GENERATED QUERY TYPES FROM GRAPHQL SCHEMA
 *
 * generated types we generate from graphql schema that match the structure of the
 * response type when querying from Hasura schema.
 *
 * These types are used as the return type when making the actual request (usually
 * under the /internal/ folder)
 */

/**
 * CUSTOM RESPONSE TYPES FOR THE END USER
 *
 * To provide a good dev exp, we build custom types derived from the
 * query types to be the response type the end developer/user will
 * work with.
 *
 * These types are used as the return type when calling a sdk api function
 * that calls the function that queries the server (usually under the /api/ folder)
 */
type GetObjectDataQueryResponse = GetObjectDataQuery["current_objects"];
/**
 * The response structure for querying tokens owned by an account.
 */
type GetAccountOwnedTokensQueryResponse = GetAccountOwnedTokensQuery["current_token_ownerships_v2"];
/**
 * The response containing the current token ownerships for an account from a specific collection.
 */
type GetAccountOwnedTokensFromCollectionResponse = GetAccountOwnedTokensFromCollectionQuery["current_token_ownerships_v2"];
/**
 * The response structure for retrieving account collections associated with owned tokens.
 */
type GetAccountCollectionsWithOwnedTokenResponse = GetAccountCollectionsWithOwnedTokensQuery["current_collection_ownership_v2_view"];
/**
 * The current balances of fungible assets for an account.
 */
type GetAccountCoinsDataResponse = GetAccountCoinsDataQuery["current_fungible_asset_balances"];
/**
 * The response structure for retrieving user transactions from the top of the blockchain.
 */
type GetChainTopUserTransactionsResponse = GetChainTopUserTransactionsQuery["user_transactions"];
/**
 * The response containing the events from the GetEventsQuery.
 */
type GetEventsResponse = GetEventsQuery["events"];
/**
 * The number of active delegators per pool in response to a query.
 */
type GetNumberOfDelegatorsResponse = GetNumberOfDelegatorsQuery["num_active_delegator_per_pool"];
/**
 * The response containing the delegated staking activities from the query.
 */
type GetDelegatedStakingActivitiesResponse = GetDelegatedStakingActivitiesQuery["delegated_staking_activities"];
/**
 * The response structure for retrieving data from the current collections.
 */
type GetCollectionDataResponse = GetCollectionDataQuery["current_collections_v2"][0];
/**
 * The response structure for retrieving token data, containing the current token information.
 */
type GetTokenDataResponse = GetTokenDataQuery["current_token_datas_v2"][0];
/**
 * The status of the processor as returned by the GetProcessorStatusQuery.
 */
type GetProcessorStatusResponse = GetProcessorStatusQuery["processor_status"];
/**
 * The response containing metadata for a fungible asset.
 */
type GetFungibleAssetMetadataResponse = GetFungibleAssetMetadataQuery["fungible_asset_metadata"];
/**
 * The response containing the activities related to fungible assets.
 */
type GetFungibleAssetActivitiesResponse = GetFungibleAssetActivitiesQuery["fungible_asset_activities"];
/**
 * The current balances of fungible assets for a specific query.
 */
type GetCurrentFungibleAssetBalancesResponse = GetCurrentFungibleAssetBalancesQuery["current_fungible_asset_balances"];
/**
 * The response structure for retrieving token activity data.
 */
type GetTokenActivityResponse = GetTokenActivityQuery["token_activities_v2"];
/**
 * The response structure for retrieving the current token ownership details.
 */
type GetCurrentTokenOwnershipResponse = GetCurrentTokenOwnershipQuery["current_token_ownerships_v2"][0];
/**
 * The response containing the current token ownerships for a user.
 */
type GetOwnedTokensResponse = GetCurrentTokenOwnershipQuery["current_token_ownerships_v2"];
/**
 * The response structure for retrieving items from a table.
 */
type GetTableItemsDataResponse = GetTableItemsDataQuery["table_items"];
/**
 * The metadata for table items retrieved from a query.
 */
type GetTableItemsMetadataResponse = GetTableItemsMetadataQuery["table_metadatas"];
/**
 * The response containing the current Aptos names from the GetNamesQuery.
 */
type GetANSNameResponse = GetNamesQuery["current_aptos_names"];
/**
 * A generic type that being passed by each function and holds an
 * array of properties we can sort the query by
 */
type OrderBy<T> = Array<{
    [K in keyof T]?: OrderByValue;
}>;
/**
 * Specifies the order direction for sorting, including options for handling null values.
 */
type OrderByValue = "asc" | "asc_nulls_first" | "asc_nulls_last" | "desc" | "desc_nulls_first" | "desc_nulls_last";
/**
 * The token standard to query for, which can be either version "v1" or "v2".
 */
type TokenStandard = "v1" | "v2";
/**
 * The GraphQL query to pass into the `queryIndexer` function.
 */
type GraphqlQuery = {
    query: string;
    variables?: {};
};

export type { GetANSNameResponse, GetAccountCoinsDataResponse, GetAccountCollectionsWithOwnedTokenResponse, GetAccountOwnedTokensFromCollectionResponse, GetAccountOwnedTokensQueryResponse, GetChainTopUserTransactionsResponse, GetCollectionDataResponse, GetCurrentFungibleAssetBalancesResponse, GetCurrentTokenOwnershipResponse, GetDelegatedStakingActivitiesResponse, GetEventsResponse, GetFungibleAssetActivitiesResponse, GetFungibleAssetMetadataResponse, GetNumberOfDelegatorsResponse, GetObjectDataQueryResponse, GetOwnedTokensResponse, GetProcessorStatusResponse, GetTableItemsDataResponse, GetTableItemsMetadataResponse, GetTokenActivityResponse, GetTokenDataResponse, GraphqlQuery, OrderBy, OrderByValue, TokenStandard };
